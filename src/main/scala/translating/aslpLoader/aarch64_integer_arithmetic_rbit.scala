/* AUTO-GENERATED ASLp LIFTER FILE */
package aslloader
import util.Logger
import ir._

def f_aarch64_integer_arithmetic_rbit (v_st: LiftState,v_enc: BitVecLiteral) : Unit = {
  if (f_eq_bits(v_st, BigInt(1), bvextract(v_st,v_enc,BigInt(31),BigInt(1)), BitVecLiteral(BigInt("1", 2), 1))) then {
    val v_X_read3__2 : RTSym = f_decl_bv(v_st, "X.read3__2", BigInt(64)) 
    assert (((f_sle_bits(v_st, BigInt(6), BitVecLiteral(BigInt("000000", 2), 6), f_ZeroExtend(v_st, BigInt(5), BigInt(6), bvextract(v_st,v_enc,BigInt(5),BigInt(5)), BigInt(6)))) && (f_sle_bits(v_st, BigInt(6), f_ZeroExtend(v_st, BigInt(5), BigInt(6), bvextract(v_st,v_enc,BigInt(5),BigInt(5)), BigInt(6)), BitVecLiteral(BigInt("011111", 2), 6)))))
    if (f_ne_bits(v_st, BigInt(5), bvextract(v_st,v_enc,BigInt(5),BigInt(5)), BitVecLiteral(BigInt("11111", 2), 5))) then {
      f_gen_store (v_st,v_X_read3__2,f_gen_array_load(v_st, v__R.v, f_cvt_bits_uint(v_st, BigInt(5), bvextract(v_st,v_enc,BigInt(5),BigInt(5)))))
    } else {
      f_gen_store (v_st,v_X_read3__2,f_gen_bit_lit(v_st, BigInt(64), BitVecLiteral(BigInt("0000000000000000000000000000000000000000000000000000000000000000", 2), 64)))
    }
    assert (((f_sle_bits(v_st, BigInt(6), BitVecLiteral(BigInt("000000", 2), 6), f_ZeroExtend(v_st, BigInt(5), BigInt(6), bvextract(v_st,v_enc,BigInt(0),BigInt(5)), BigInt(6)))) && (f_sle_bits(v_st, BigInt(6), f_ZeroExtend(v_st, BigInt(5), BigInt(6), bvextract(v_st,v_enc,BigInt(0),BigInt(5)), BigInt(6)), BitVecLiteral(BigInt("011111", 2), 6)))))
    if (f_ne_bits(v_st, BigInt(5), bvextract(v_st,v_enc,BigInt(0),BigInt(5)), BitVecLiteral(BigInt("11111", 2), 5))) then {
      f_gen_array_store (v_st,v__R.v,f_cvt_bits_uint(v_st, BigInt(5), bvextract(v_st,v_enc,BigInt(0),BigInt(5))),f_gen_append_bits(v_st, BigInt(63), BigInt(1), f_gen_append_bits(v_st, BigInt(62), BigInt(1), f_gen_append_bits(v_st, BigInt(61), BigInt(1), f_gen_append_bits(v_st, BigInt(60), BigInt(1), f_gen_append_bits(v_st, BigInt(59), BigInt(1), f_gen_append_bits(v_st, BigInt(58), BigInt(1), f_gen_append_bits(v_st, BigInt(57), BigInt(1), f_gen_append_bits(v_st, BigInt(56), BigInt(1), f_gen_append_bits(v_st, BigInt(55), BigInt(1), f_gen_append_bits(v_st, BigInt(54), BigInt(1), f_gen_append_bits(v_st, BigInt(53), BigInt(1), f_gen_append_bits(v_st, BigInt(52), BigInt(1), f_gen_append_bits(v_st, BigInt(51), BigInt(1), f_gen_append_bits(v_st, BigInt(50), BigInt(1), f_gen_append_bits(v_st, BigInt(49), BigInt(1), f_gen_append_bits(v_st, BigInt(48), BigInt(1), f_gen_append_bits(v_st, BigInt(47), BigInt(1), f_gen_append_bits(v_st, BigInt(46), BigInt(1), f_gen_append_bits(v_st, BigInt(45), BigInt(1), f_gen_append_bits(v_st, BigInt(44), BigInt(1), f_gen_append_bits(v_st, BigInt(43), BigInt(1), f_gen_append_bits(v_st, BigInt(42), BigInt(1), f_gen_append_bits(v_st, BigInt(41), BigInt(1), f_gen_append_bits(v_st, BigInt(40), BigInt(1), f_gen_append_bits(v_st, BigInt(39), BigInt(1), f_gen_append_bits(v_st, BigInt(38), BigInt(1), f_gen_append_bits(v_st, BigInt(37), BigInt(1), f_gen_append_bits(v_st, BigInt(36), BigInt(1), f_gen_append_bits(v_st, BigInt(35), BigInt(1), f_gen_append_bits(v_st, BigInt(34), BigInt(1), f_gen_append_bits(v_st, BigInt(33), BigInt(1), f_gen_append_bits(v_st, BigInt(32), BigInt(1), f_gen_append_bits(v_st, BigInt(31), BigInt(1), f_gen_append_bits(v_st, BigInt(30), BigInt(1), f_gen_append_bits(v_st, BigInt(29), BigInt(1), f_gen_append_bits(v_st, BigInt(28), BigInt(1), f_gen_append_bits(v_st, BigInt(27), BigInt(1), f_gen_append_bits(v_st, BigInt(26), BigInt(1), f_gen_append_bits(v_st, BigInt(25), BigInt(1), f_gen_append_bits(v_st, BigInt(24), BigInt(1), f_gen_append_bits(v_st, BigInt(23), BigInt(1), f_gen_append_bits(v_st, BigInt(22), BigInt(1), f_gen_append_bits(v_st, BigInt(21), BigInt(1), f_gen_append_bits(v_st, BigInt(20), BigInt(1), f_gen_append_bits(v_st, BigInt(19), BigInt(1), f_gen_append_bits(v_st, BigInt(18), BigInt(1), f_gen_append_bits(v_st, BigInt(17), BigInt(1), f_gen_append_bits(v_st, BigInt(16), BigInt(1), f_gen_append_bits(v_st, BigInt(15), BigInt(1), f_gen_append_bits(v_st, BigInt(14), BigInt(1), f_gen_append_bits(v_st, BigInt(13), BigInt(1), f_gen_append_bits(v_st, BigInt(12), BigInt(1), f_gen_append_bits(v_st, BigInt(11), BigInt(1), f_gen_append_bits(v_st, BigInt(10), BigInt(1), f_gen_append_bits(v_st, BigInt(9), BigInt(1), f_gen_append_bits(v_st, BigInt(8), BigInt(1), f_gen_append_bits(v_st, BigInt(7), BigInt(1), f_gen_append_bits(v_st, BigInt(6), BigInt(1), f_gen_append_bits(v_st, BigInt(5), BigInt(1), f_gen_append_bits(v_st, BigInt(4), BigInt(1), f_gen_append_bits(v_st, BigInt(3), BigInt(1), f_gen_append_bits(v_st, BigInt(2), BigInt(1), f_gen_append_bits(v_st, BigInt(1), BigInt(1), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(0), BigInt(1)), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(1), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(2), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(3), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(4), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(5), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(6), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(7), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(8), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(9), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(10), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(11), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(12), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(13), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(14), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(15), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(16), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(17), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(18), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(19), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(20), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(21), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(22), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(23), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(24), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(25), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(26), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(27), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(28), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(29), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(30), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(31), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(32), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(33), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(34), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(35), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(36), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(37), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(38), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(39), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(40), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(41), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(42), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(43), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(44), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(45), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(46), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(47), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(48), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(49), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(50), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(51), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(52), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(53), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(54), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(55), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(56), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(57), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(58), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(59), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(60), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(61), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(62), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read3__2), BigInt(63), BigInt(1))))
    }
  } else {
    val v_X_read11__2 : RTSym = f_decl_bv(v_st, "X.read11__2", BigInt(32)) 
    assert (((f_sle_bits(v_st, BigInt(6), BitVecLiteral(BigInt("000000", 2), 6), f_ZeroExtend(v_st, BigInt(5), BigInt(6), bvextract(v_st,v_enc,BigInt(5),BigInt(5)), BigInt(6)))) && (f_sle_bits(v_st, BigInt(6), f_ZeroExtend(v_st, BigInt(5), BigInt(6), bvextract(v_st,v_enc,BigInt(5),BigInt(5)), BigInt(6)), BitVecLiteral(BigInt("011111", 2), 6)))))
    if (f_ne_bits(v_st, BigInt(5), bvextract(v_st,v_enc,BigInt(5),BigInt(5)), BitVecLiteral(BigInt("11111", 2), 5))) then {
      f_gen_store (v_st,v_X_read11__2,f_gen_slice(v_st, f_gen_array_load(v_st, v__R.v, f_cvt_bits_uint(v_st, BigInt(5), bvextract(v_st,v_enc,BigInt(5),BigInt(5)))), BigInt(0), BigInt(32)))
    } else {
      f_gen_store (v_st,v_X_read11__2,f_gen_bit_lit(v_st, BigInt(32), BitVecLiteral(BigInt("00000000000000000000000000000000", 2), 32)))
    }
    assert (((f_sle_bits(v_st, BigInt(6), BitVecLiteral(BigInt("000000", 2), 6), f_ZeroExtend(v_st, BigInt(5), BigInt(6), bvextract(v_st,v_enc,BigInt(0),BigInt(5)), BigInt(6)))) && (f_sle_bits(v_st, BigInt(6), f_ZeroExtend(v_st, BigInt(5), BigInt(6), bvextract(v_st,v_enc,BigInt(0),BigInt(5)), BigInt(6)), BitVecLiteral(BigInt("011111", 2), 6)))))
    if (f_ne_bits(v_st, BigInt(5), bvextract(v_st,v_enc,BigInt(0),BigInt(5)), BitVecLiteral(BigInt("11111", 2), 5))) then {
      f_gen_array_store (v_st,v__R.v,f_cvt_bits_uint(v_st, BigInt(5), bvextract(v_st,v_enc,BigInt(0),BigInt(5))),f_gen_ZeroExtend(v_st, BigInt(32), BigInt(64), f_gen_append_bits(v_st, BigInt(31), BigInt(1), f_gen_append_bits(v_st, BigInt(30), BigInt(1), f_gen_append_bits(v_st, BigInt(29), BigInt(1), f_gen_append_bits(v_st, BigInt(28), BigInt(1), f_gen_append_bits(v_st, BigInt(27), BigInt(1), f_gen_append_bits(v_st, BigInt(26), BigInt(1), f_gen_append_bits(v_st, BigInt(25), BigInt(1), f_gen_append_bits(v_st, BigInt(24), BigInt(1), f_gen_append_bits(v_st, BigInt(23), BigInt(1), f_gen_append_bits(v_st, BigInt(22), BigInt(1), f_gen_append_bits(v_st, BigInt(21), BigInt(1), f_gen_append_bits(v_st, BigInt(20), BigInt(1), f_gen_append_bits(v_st, BigInt(19), BigInt(1), f_gen_append_bits(v_st, BigInt(18), BigInt(1), f_gen_append_bits(v_st, BigInt(17), BigInt(1), f_gen_append_bits(v_st, BigInt(16), BigInt(1), f_gen_append_bits(v_st, BigInt(15), BigInt(1), f_gen_append_bits(v_st, BigInt(14), BigInt(1), f_gen_append_bits(v_st, BigInt(13), BigInt(1), f_gen_append_bits(v_st, BigInt(12), BigInt(1), f_gen_append_bits(v_st, BigInt(11), BigInt(1), f_gen_append_bits(v_st, BigInt(10), BigInt(1), f_gen_append_bits(v_st, BigInt(9), BigInt(1), f_gen_append_bits(v_st, BigInt(8), BigInt(1), f_gen_append_bits(v_st, BigInt(7), BigInt(1), f_gen_append_bits(v_st, BigInt(6), BigInt(1), f_gen_append_bits(v_st, BigInt(5), BigInt(1), f_gen_append_bits(v_st, BigInt(4), BigInt(1), f_gen_append_bits(v_st, BigInt(3), BigInt(1), f_gen_append_bits(v_st, BigInt(2), BigInt(1), f_gen_append_bits(v_st, BigInt(1), BigInt(1), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(0), BigInt(1)), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(1), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(2), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(3), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(4), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(5), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(6), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(7), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(8), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(9), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(10), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(11), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(12), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(13), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(14), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(15), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(16), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(17), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(18), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(19), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(20), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(21), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(22), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(23), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(24), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(25), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(26), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(27), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(28), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(29), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(30), BigInt(1))), f_gen_slice(v_st, f_gen_load(v_st, v_X_read11__2), BigInt(31), BigInt(1))), f_gen_int_lit(v_st, BigInt(64))))
    }
  }
}
