// File generated by the BNF Converter (bnfc 2.9.5).

package basil_ir.Absyn;

public class PD  extends ProcDef {
  public final String str_;
  public final PAddress paddress_;
  public final PEntry pentry_;
  public final PExit pexit_;
  public final InternalBlocks internalblocks_;
  public PD(String p1, PAddress p2, PEntry p3, PExit p4, InternalBlocks p5) { str_ = p1; paddress_ = p2; pentry_ = p3; pexit_ = p4; internalblocks_ = p5; }

  public <R,A> R accept(basil_ir.Absyn.ProcDef.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(java.lang.Object o) {
    if (this == o) return true;
    if (o instanceof basil_ir.Absyn.PD) {
      basil_ir.Absyn.PD x = (basil_ir.Absyn.PD)o;
      return this.str_.equals(x.str_) && this.paddress_.equals(x.paddress_) && this.pentry_.equals(x.pentry_) && this.pexit_.equals(x.pexit_) && this.internalblocks_.equals(x.internalblocks_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(37*(37*(this.str_.hashCode())+this.paddress_.hashCode())+this.pentry_.hashCode())+this.pexit_.hashCode())+this.internalblocks_.hashCode();
  }


}
